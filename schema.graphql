type Account @entity {
  id: ID!

  address: Bytes!

  internalBalances: [AccountInternalBalance!] @derivedFrom(field: "account")

  " Liquidity gauges this account contributed to "
  gauges: [GaugeLiquidity!] @derivedFrom(field: "user")
  "  "
  gaugeWeightVotes: [GaugeWeightVote!] @derivedFrom(field: "user")
}

type AccountInternalBalance @entity {
  id: ID!
  account: Account
  token: Bytes!
  balance: BigDecimal!
  balanceRaw: BigInt!
}

type Gauge @entity {
  id: ID!
  address: Bytes!
  type: GaugeType!
  killed: Boolean!

  name: String!
  symbol: String!

  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!

  weights: [GaugeWeight!] @derivedFrom(field: "gauge")

  weightVotes: [GaugeWeightVote!] @derivedFrom(field: "gauge")
}

type GaugeWeight @entity {
  id: ID!
  gauge: Gauge!
  time: BigInt!
  weight: BigDecimal!
}

type GaugeWeightVote @entity {
  id: ID!
  gauge: Gauge!
  user: Account!
  time: BigInt!
  weight: BigDecimal!
}

type GaugeType @entity {
  id: ID!
  name: String!
  gaugeCount: BigInt!
  gauges: [Gauge!] @derivedFrom(field: "type")
  weights: [GaugeTypeWeight!] @derivedFrom(field: "type")
}

type GaugeTypeWeight @entity {
  id: ID!
  type: GaugeType!
  time: BigInt!
  weight: BigDecimal!
}

type GaugeTotalWeight @entity {
  id: ID!
  time: BigInt!
  weight: BigDecimal!
}

type GaugeLiquidity @entity {
  id: ID!
  user: Account!
  gauge: Gauge!
  originalBalance: BigInt!
  originalSupply: BigInt!
  workingBalance: BigInt!
  workingSupply: BigInt!
  timestamp: BigInt!
  block: BigInt!
  transaction: Bytes!
}

type GaugeDeposit @entity {
  id: ID!
  gauge: Gauge!
  provider: Account!
  value: BigDecimal!
}

type GaugeWithdraw @entity {
  id: ID!
  gauge: Gauge!
  provider: Account!
  value: BigDecimal!
}
